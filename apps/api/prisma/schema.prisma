// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  phone     String
  email     String    @unique
  password  String
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Invoices  Invoice[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  Products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model PaymentMethod {
  id        Int       @id @default(autoincrement())
  name      String
  Invoices  Invoice[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model MeasurementUnit {
  id        Int       @id @default(autoincrement())
  name      String
  Products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id                Int             @id @default(autoincrement())
  name              String          @unique
  barCode           String          @unique
  measurementUnit   MeasurementUnit @relation(fields: [measurementUnitId], references: [id])
  measurementUnitId Int
  category          Category        @relation(fields: [categoryId], references: [id])
  categoryId        Int
  stock             Decimal
  price             Decimal
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  Sales             Sale[]
}

model Customer {
  id        Int       @id @default(autoincrement())
  name      String
  document  String    @unique
  phone     String
  email     String
  address   String
  Invoices  Invoice[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Invoice {
  id              Int           @id @default(autoincrement())
  customer        Customer      @relation(fields: [customerId], references: [id])
  customerId      Int
  paymentMethod   PaymentMethod @relation(fields: [paymentMethodId], references: [id])
  paymentMethodId Int
  total           Decimal
  user            User          @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  Sales           Sale[]
}

model Sale {
  id        Int      @id @default(autoincrement())
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
  invoiceId Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Decimal
  price     Decimal
  subtotal  Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
